<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="33" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="509832" started-at="2021-08-17T07:11:07 IST" finished-at="2021-08-17T07:19:37 IST">
    <groups>
    </groups>
    <test name="Sign up" duration-ms="104601" started-at="2021-08-17T07:11:07 IST" finished-at="2021-08-17T07:12:52 IST">
      <class name="testCases.RunnerSignUp">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="beforeClass" is-config="true" duration-ms="1966" started-at="2021-08-17T07:11:07 IST" finished-at="2021-08-17T07:11:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="10797" started-at="2021-08-17T07:11:09 IST" data-provider="dp" finished-at="2021-08-17T07:11:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="7327" started-at="2021-08-17T07:11:20 IST" data-provider="dp" finished-at="2021-08-17T07:11:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan45]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="12819" started-at="2021-08-17T07:11:28 IST" data-provider="dp" finished-at="2021-08-17T07:11:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="8046" started-at="2021-08-17T07:11:40 IST" data-provider="dp" finished-at="2021-08-17T07:11:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Ak70]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Ak70]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="12546" started-at="2021-08-17T07:11:48 IST" data-provider="dp" finished-at="2021-08-17T07:12:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6281]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="7842" started-at="2021-08-17T07:12:01 IST" data-provider="dp" finished-at="2021-08-17T07:12:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6282]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6283]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="7692" started-at="2021-08-17T07:12:09 IST" data-provider="dp" finished-at="2021-08-17T07:12:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6282]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6283]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="8124" started-at="2021-08-17T07:12:16 IST" data-provider="dp" finished-at="2021-08-17T07:12:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6282]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6283]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="12487" started-at="2021-08-17T07:12:25 IST" data-provider="dp" finished-at="2021-08-17T07:12:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[anask6283]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="signupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="signupTest" duration-ms="14861" started-at="2021-08-17T07:12:37 IST" data-provider="dp" finished-at="2021-08-17T07:12:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anask6281@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[anask6282]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.RunnerSignUp@3b956878]" name="afterClass" is-config="true" duration-ms="17" started-at="2021-08-17T07:12:52 IST" finished-at="2021-08-17T07:12:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.RunnerSignUp -->
    </test> <!-- Sign up -->
    <test name="Sign in" duration-ms="82594" started-at="2021-08-17T07:12:52 IST" finished-at="2021-08-17T07:14:15 IST">
      <class name="testCases.RunnerSignin">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="beforeTest" is-config="true" duration-ms="1743" started-at="2021-08-17T07:12:52 IST" finished-at="2021-08-17T07:12:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="f" duration-ms="32569" started-at="2021-08-17T07:12:54 IST" data-provider="dp" finished-at="2021-08-17T07:13:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[checrc10@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheram@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="afterTest" is-config="true" duration-ms="114" started-at="2021-08-17T07:13:26 IST" finished-at="2021-08-17T07:13:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="beforeTest" is-config="true" duration-ms="1098" started-at="2021-08-17T07:13:26 IST" finished-at="2021-08-17T07:13:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="f" duration-ms="6708" started-at="2021-08-17T07:13:28 IST" data-provider="dp" finished-at="2021-08-17T07:13:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[checrc10@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="afterTest" is-config="true" duration-ms="4149" started-at="2021-08-17T07:13:34 IST" finished-at="2021-08-17T07:13:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="beforeTest" is-config="true" duration-ms="1160" started-at="2021-08-17T07:13:38 IST" finished-at="2021-08-17T07:13:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="f" duration-ms="8422" started-at="2021-08-17T07:13:40 IST" data-provider="dp" finished-at="2021-08-17T07:13:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheram@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="afterTest" is-config="true" duration-ms="4157" started-at="2021-08-17T07:13:48 IST" finished-at="2021-08-17T07:13:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="beforeTest" is-config="true" duration-ms="1160" started-at="2021-08-17T07:13:52 IST" finished-at="2021-08-17T07:13:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="f" duration-ms="17173" started-at="2021-08-17T07:13:53 IST" data-provider="dp" finished-at="2021-08-17T07:14:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[checrc10@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sadfasdf]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerSignin@3f363cf5]" name="afterTest" is-config="true" duration-ms="4129" started-at="2021-08-17T07:14:10 IST" finished-at="2021-08-17T07:14:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.RunnerSignin -->
    </test> <!-- Sign in -->
    <test name="One way flight booking" duration-ms="42200" started-at="2021-08-17T07:14:15 IST" finished-at="2021-08-17T07:14:57 IST">
      <class name="testCases.RunnerOnewayFlight">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="beforeTest" is-config="true" duration-ms="1099" started-at="2021-08-17T07:14:15 IST" finished-at="2021-08-17T07:14:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="f" duration-ms="40267" started-at="2021-08-17T07:14:16 IST" data-provider="dp" finished-at="2021-08-17T07:14:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="afterMethod" is-config="true" duration-ms="733" started-at="2021-08-17T07:14:56 IST" finished-at="2021-08-17T07:14:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="f" duration-ms="5" started-at="2021-08-17T07:14:57 IST" data-provider="dp" finished-at="2021-08-17T07:14:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780)
at testCases.RunnerOnewayFlight.f(RunnerOnewayFlight.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:14:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="f" duration-ms="1" started-at="2021-08-17T07:14:57 IST" data-provider="dp" finished-at="2021-08-17T07:14:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdefghi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780)
at testCases.RunnerOnewayFlight.f(RunnerOnewayFlight.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:14:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="f" duration-ms="1" started-at="2021-08-17T07:14:57 IST" data-provider="dp" finished-at="2021-08-17T07:14:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780)
at testCases.RunnerOnewayFlight.f(RunnerOnewayFlight.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:14:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.RunnerOnewayFlight@7bc10d84]" name="afterClass" is-config="true" duration-ms="17" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:14:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.RunnerOnewayFlight -->
    </test> <!-- One way flight booking -->
    <test name="Return flight booking" duration-ms="71262" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:16:08 IST">
      <class name="testCases.RunnerReturnFlight">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="beforeMethod" is-config="true" duration-ms="1164" started-at="2021-08-17T07:14:57 IST" finished-at="2021-08-17T07:14:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="f" duration-ms="47862" started-at="2021-08-17T07:14:58 IST" data-provider="dp" finished-at="2021-08-17T07:15:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai (BOM-Chhatrapati Shivaji Intl.)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bengaluru (BLR-Kempegowda Intl.) ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="afterMethod" is-config="true" duration-ms="773" started-at="2021-08-17T07:15:46 IST" finished-at="2021-08-17T07:15:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="beforeMethod" is-config="true" duration-ms="1129" started-at="2021-08-17T07:15:47 IST" finished-at="2021-08-17T07:15:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="f" duration-ms="4621" started-at="2021-08-17T07:15:48 IST" data-provider="dp" finished-at="2021-08-17T07:15:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bagdogra (IXB - Bagdogra)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="afterMethod" is-config="true" duration-ms="722" started-at="2021-08-17T07:15:53 IST" finished-at="2021-08-17T07:15:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="beforeMethod" is-config="true" duration-ms="1106" started-at="2021-08-17T07:15:53 IST" finished-at="2021-08-17T07:15:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="f" duration-ms="6311" started-at="2021-08-17T07:15:54 IST" data-provider="dp" finished-at="2021-08-17T07:16:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdgef]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bengaluru (BLR-Kempegowda Intl.) ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="afterMethod" is-config="true" duration-ms="758" started-at="2021-08-17T07:16:01 IST" finished-at="2021-08-17T07:16:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="beforeMethod" is-config="true" duration-ms="1144" started-at="2021-08-17T07:16:01 IST" finished-at="2021-08-17T07:16:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="f" duration-ms="4948" started-at="2021-08-17T07:16:03 IST" data-provider="dp" finished-at="2021-08-17T07:16:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bengaluru (BLR-Kempegowda Intl.) ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="afterMethod" is-config="true" duration-ms="702" started-at="2021-08-17T07:16:08 IST" finished-at="2021-08-17T07:16:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.RunnerReturnFlight@5778826f]" name="afterClass" is-config="true" duration-ms="12" started-at="2021-08-17T07:16:08 IST" finished-at="2021-08-17T07:16:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.RunnerReturnFlight -->
    </test> <!-- Return flight booking -->
    <test name="MultiCity flight booking" duration-ms="69392" started-at="2021-08-17T07:16:08 IST" finished-at="2021-08-17T07:17:18 IST">
      <class name="testCases.RunnerMultiCity">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="beforeTest" is-config="true" duration-ms="1096" started-at="2021-08-17T07:16:08 IST" finished-at="2021-08-17T07:16:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="f" duration-ms="17260" started-at="2021-08-17T07:16:09 IST" data-provider="dp" finished-at="2021-08-17T07:16:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Chennai]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20 Aug 2021]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[25 Aug 2021]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/ul[1]/li[1]/div[1]/div[1]/div[1]/button[1]"}
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\parth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59333}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dd01e3a6464665f0cad185a4539ab761
*** Element info: {Using=xpath, value=/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/ul[1]/li[1]/div[1]/div[1]/div[1]/button[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/ul[1]/li[1]/div[1]/div[1]/div[1]/button[1]"}
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\parth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59333}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dd01e3a6464665f0cad185a4539ab761
*** Element info: {Using=xpath, value=/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/ul[1]/li[1]/div[1]/div[1]/div[1]/button[1]}
at sun.reflect.GeneratedConstructorAccessor43.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at testCases.RunnerMultiCity.tillCheckout(RunnerMultiCity.java:169)
at testCases.RunnerMultiCity.f(RunnerMultiCity.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="afterTest" is-config="true" duration-ms="751" started-at="2021-08-17T07:16:27 IST" finished-at="2021-08-17T07:16:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="beforeTest" is-config="true" duration-ms="1130" started-at="2021-08-17T07:16:27 IST" finished-at="2021-08-17T07:16:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="f" duration-ms="22762" started-at="2021-08-17T07:16:28 IST" data-provider="dp" finished-at="2021-08-17T07:16:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chennai]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hyderabad]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22 Aug 2021]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[26 Aug 2021]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\parth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51666}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8acf62aae57d189b9dd631e0f3b97c33
*** Element info: {Using=css selector, value=/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/div[6]/section[1]/footer[1]/div[1]/button[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-3587CAUV', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\parth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51666}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8acf62aae57d189b9dd631e0f3b97c33
*** Element info: {Using=css selector, value=/html[1]/body[1]/div[2]/div[1]/div[1]/div[2]/div[3]/div[1]/section[1]/main[1]/div[6]/section[1]/footer[1]/div[1]/button[1]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at testCases.RunnerMultiCity.tillCheckout(RunnerMultiCity.java:170)
at testCases.RunnerMultiCity.f(RunnerMultiCity.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="afterTest" is-config="true" duration-ms="740" started-at="2021-08-17T07:16:51 IST" finished-at="2021-08-17T07:16:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="beforeTest" is-config="true" duration-ms="1123" started-at="2021-08-17T07:16:52 IST" finished-at="2021-08-17T07:16:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="f" duration-ms="6215" started-at="2021-08-17T07:16:53 IST" data-provider="dp" finished-at="2021-08-17T07:16:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Shimla]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[21 Aug 2021]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[23 Aug 2021]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="afterTest" is-config="true" duration-ms="729" started-at="2021-08-17T07:16:59 IST" finished-at="2021-08-17T07:17:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="beforeTest" is-config="true" duration-ms="1146" started-at="2021-08-17T07:17:00 IST" finished-at="2021-08-17T07:17:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="f" duration-ms="6149" started-at="2021-08-17T07:17:01 IST" data-provider="dp" finished-at="2021-08-17T07:17:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="afterTest" is-config="true" duration-ms="691" started-at="2021-08-17T07:17:07 IST" finished-at="2021-08-17T07:17:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="beforeTest" is-config="true" duration-ms="1089" started-at="2021-08-17T07:17:08 IST" finished-at="2021-08-17T07:17:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="f" duration-ms="7792" started-at="2021-08-17T07:17:09 IST" data-provider="dp" finished-at="2021-08-17T07:17:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[77z7z7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pune]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Kolkata]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[24 Aug 2021]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[27 Aug 2021]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.RunnerMultiCity@7b64240d]" name="afterTest" is-config="true" duration-ms="708" started-at="2021-08-17T07:17:17 IST" finished-at="2021-08-17T07:17:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.RunnerMultiCity -->
    </test> <!-- MultiCity flight booking -->
    <test name="Hotel Booking" duration-ms="139540" started-at="2021-08-17T07:17:18 IST" finished-at="2021-08-17T07:19:37 IST">
      <class name="testCases.RunnerHotelBooking">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1110" started-at="2021-08-17T07:17:18 IST" finished-at="2021-08-17T07:17:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="31385" started-at="2021-08-17T07:17:19 IST" data-provider="dp" finished-at="2021-08-17T07:17:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="833" started-at="2021-08-17T07:17:50 IST" finished-at="2021-08-17T07:17:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1110" started-at="2021-08-17T07:17:51 IST" finished-at="2021-08-17T07:17:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="38456" started-at="2021-08-17T07:17:52 IST" data-provider="dp" finished-at="2021-08-17T07:18:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[del]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[06-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[19-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="819" started-at="2021-08-17T07:18:31 IST" finished-at="2021-08-17T07:18:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1085" started-at="2021-08-17T07:18:31 IST" finished-at="2021-08-17T07:18:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="33486" started-at="2021-08-17T07:18:32 IST" data-provider="dp" finished-at="2021-08-17T07:19:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[guj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[03-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="773" started-at="2021-08-17T07:19:06 IST" finished-at="2021-08-17T07:19:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1115" started-at="2021-08-17T07:19:07 IST" finished-at="2021-08-17T07:19:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="10151" started-at="2021-08-17T07:19:08 IST" data-provider="dp" finished-at="2021-08-17T07:19:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="720" started-at="2021-08-17T07:19:18 IST" finished-at="2021-08-17T07:19:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1101" started-at="2021-08-17T07:19:19 IST" finished-at="2021-08-17T07:19:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="10648" started-at="2021-08-17T07:19:20 IST" data-provider="dp" finished-at="2021-08-17T07:19:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[09-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Na]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="750" started-at="2021-08-17T07:19:30 IST" finished-at="2021-08-17T07:19:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="beforeTest" is-config="true" duration-ms="1127" started-at="2021-08-17T07:19:31 IST" finished-at="2021-08-17T07:19:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="f" duration-ms="4126" started-at="2021-08-17T07:19:32 IST" data-provider="dp" finished-at="2021-08-17T07:19:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[7.77788888E8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Sep-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15-Sep-2021]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterMethod" is-config="true" duration-ms="700" started-at="2021-08-17T07:19:36 IST" finished-at="2021-08-17T07:19:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.RunnerHotelBooking@63192798]" name="afterClass" is-config="true" duration-ms="29" started-at="2021-08-17T07:19:37 IST" finished-at="2021-08-17T07:19:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.RunnerHotelBooking -->
    </test> <!-- Hotel Booking -->
  </suite> <!-- Suite -->
</testng-results>
